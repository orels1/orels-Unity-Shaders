%DataStructs()
{
    struct MeshData
    {
        half4 uv0;
        half4 uv1;
        half4 uv2;
        half4 uv3;
        #if !defined(UNITY_PASS_SHADOWCASTER)
        half4 lightmapUv;
        #endif
        half4 vertexColor;
        half3 normal;
        half3 worldNormal;
        half3 localSpacePosition;
        half3 worldSpacePosition;
        half3 worldSpaceViewDir;
        half3 tangentSpaceViewDir;
        float3x3 TBNMatrix;
        float4 extraV2F0;
        float4 extraV2F1;
        float4 extraV2F2;
        float4 extraV2F3;
        float4 screenPos;
    };

    MeshData CreateMeshData(FragmentData i)
    {
        MeshData d = (MeshData) 0;
        d.uv0 = i.uv0;
        d.uv1 = i.uv1;
        d.uv2 = i.uv2;
        d.uv3 = i.uv3;
        #if !defined(UNITY_PASS_SHADOWCASTER)
        d.lightmapUv = i.lightmapUv;
        #endif
        d.worldNormal = normalize(i.worldNormal);
        d.localSpacePosition = mul(unity_WorldToObject, float4(i.worldPos, 1)).xyz;
        d.worldSpacePosition = i.worldPos;
        d.worldSpaceViewDir = normalize(_WorldSpaceCameraPos - i.worldPos);

        d.normal = i.normal;
        d.vertexColor = i.vertexColor;

        #if !defined(UNITY_PASS_SHADOWCASTER)
        float3 bitangent = Unity_SafeNormalize(cross(i.worldTangent.xyz, d.worldNormal) * i.worldTangent.w * - 1);
        d.TBNMatrix = float3x3(normalize(i.worldTangent.xyz), bitangent, d.worldNormal);
        d.tangentSpaceViewDir = mul(d.TBNMatrix, d.worldSpaceViewDir);
        #endif

        #if defined(EXTRA_V2F_0)
        d.extraV2F0 = i.extraV2F0;
        #endif
        #if defined(EXTRA_V2F_1)
        d.extraV2F1 = i.extraV2F1;
        #endif
        #if defined(EXTRA_V2F_2)
        d.extraV2F2 = i.extraV2F2;
        #endif
        #if defined(EXTRA_V2F_3)
        d.extraV2F3 = i.extraV2F3;
        #endif
        #if defined(NEED_SCREEN_POS)
        d.screenPos = i.screenPos;
        #endif

        return d;
    }
}
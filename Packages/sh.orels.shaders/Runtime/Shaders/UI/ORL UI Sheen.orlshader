%ShaderName("orels1/UI/Sheen")
%LightingModel("@/LightingModels/UI")
%CustomEditor("ORL.ShaderInspector.InspectorGUI")

%Properties()
{
    UI_SheenHeader("# Sheen Settings", Int) = 1
    UI_SheenDocs("[This shader has documentation](https://shaders.orels.sh/docs/ui/sheen)", Int) = 0
    _SheenStrength("Sheen Strength", Range(-3,3)) = 1
    _SheenPower("Sheen Focus", Float) = 2
    [HDR]_SheenTint("Sheen Tint", Color) = (1,1,1,1)
    _SheenAlbedoTint("Albedo Tint", Range(0,1)) = 1
    [Enum(Overlay, 0, Lighten, 1, Screen, 2, Multiply, 3)]_SheenBlendType("Blending Type", Int) = 0
    UI_SheenBlendTypeNote("> The blend types match the ones provided by Photoshop", Int) = 0
    [ToggleUI]_SheenForceDiscard("Force Discard", Int) = 0
}

%Includes()
{
    "self",
    "@/Shaders/UI/ORL UI"
}

%Variables()
{
    half _SheenStrength;
    half _SheenPower;
    half4 _SheenTint;
    half _SheenAlbedoTint;
    int _SheenBlendType;
    int _SheenForceDiscard;
}

%Fragment("UI_SheenFragment", 10)
{
    void UI_SheenFragment(MeshData d, inout SurfaceData o) {
        if (_SheenForceDiscard && o.Alpha < 0.999) {
            discard;
        }
        half NoV = saturate(dot(d.worldNormal, d.worldSpaceViewDir));
        NoV = saturate(pow(NoV, _SheenPower));
        half3 blendSource = lerp(_SheenTint, o.Albedo, _SheenAlbedoTint);
        half3 blended = blendSource;
        switch (_SheenBlendType)
        {
            case 0: blended = BlendOverlay(o.Albedo, blendSource * NoV); break;
            case 1: blended = BlendLighten(o.Albedo, blendSource * NoV); break;
            case 2: blended = BlendScreen(o.Albedo, blendSource * NoV); break;
            case 3: blended = o.Albedo * blendSource * NoV; break;
        }
        o.Albedo = lerp(o.Albedo, blended, _SheenStrength);
    }
}
